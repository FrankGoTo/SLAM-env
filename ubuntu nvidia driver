#可选
#卸载显卡有两种方式：
#使用apt-get安装的可以使用：sudo apt-get remove --purge nvidia* 命令卸载
#使用runfile安装的可以使用：sudo ./NVIDIA-Linux-x86_64-*.run --uninstall 命令卸载

禁用nouveau 及其重要 否则无法手动安装驱动

sudo vi /etc/modprobe.d/blacklist.conf

在文件最后添加下面两行：
        blacklist nouveau
        options nouveau modeset=0

添加完成后保存退出
执行：sudo update-initramfs -u



重启电脑

执行: lsmod | grep nouveau 命令后若没有输出，则说明卸载成功

停止图形界面服务：sudo service gdm stop

安装run文件

开启图形界面：sudo service gdm stop


2.安装CUDA
（1）gcc降级到4.8
        (1)在Ubuntu 16.04上安装老版gcc十分简单，直接用apt-get命令下载即可.
        sudo apt-get install gcc-4.8

        安装完成后输入命令gcc --verison查看gcc的版本,此时还是6.2
        (2)设置gcc的默认版本
        设置之前可以先输入命令ls /usr/bin/gcc* 查看gcc 4.8版本是否安装成功
        然后输入下面的命令设置默认版本:
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 100
        最后的数字为优先级(越大越高),因为只有一个4.8版本作为alternatives,可以不要纠结数字,这样设就行了
        (3)然后可以输入以下命令查看设置结果(非必须)
        sudo update-alternatives --config gcc
        因为只设置了一个,所以显示结果为:"链接组 gcc (提供 /usr/bin/gcc)中只有一个候选项：/usr/bin/gcc-4.8
        无需配置.",如果有多个则会显示一个按优先级的列表.
        (4)最后再次输入命令gcc -version查看gcc的版本已经变成4.8啦...就成功啦.
        现在默认版本已经是4.8版本,如果想用6.2版本,则gcc-6.2 这样指定就好啦
        g++ 等其他软件也是这样设置进行版本升级/降级.

        ps:
        (1)当以上设置不需要的时候输入以下命令删除:
        sudo update-alternatives --remove gcc /usr/bin/gcc-4.8
（2）安装run，之前装过驱动，这次选择不安装。
（3）将库文件 头文件 添加到环境变量
        sudo vim ~/.bashrc

        export PATH=/usr/local/cuda-9.0/bin${PATH:+:${PATH}}
        export LD_LIBRARY_PATH=/usr/local/cuda-9.0/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
        export CUDA_HOME=/usr/local/cuda-9.0
        
        source ~/.bashrc
   
 3.安装cudnn
 tar -xzvf cudnn-9.0-linux-x64-v7.tgz
 
sudo cp cuda/include/cudnn.h /usr/local/cuda/include
sudo cp cuda/lib64/libcudnn* /usr/local/cuda/lib64
sudo chmod a+r /usr/local/cuda/include/cudnn.h /usr/local/cuda/lib64/libcudnn*

4. pip换源
cd ~
sudo mkdir .pip
sudo vim pip.conf

#内容
[global]

index-url = https://pypi.tuna.tsinghua.edu.cn/simple

[install]

trusted-host=https://pypi.tuna.tsinghua.edu.cn



pip can not find "from pip import main"
solution:

sudo vim pip3

#insert

from pip import __main__
if __name__ == '__main__':
    sys.exit(__main__._main())
